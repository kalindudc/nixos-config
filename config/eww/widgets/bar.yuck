;;;;; Widgets ;;;;;

(defwidget system_menu []
  (eventbox
    :onhover "${eww} update system_menu_button=true"
    :onhoverlost "${eww} update system_menu_button=false"
    :cursor "pointer"

    (box
      :orientation "horizontal"
      :space-evenly true

      (button
        :class "button_bar_icon button_system_menu"
        :onclick "${script_runner} menus/toggle_menu.sh -m system_menu"

        "󱄅"
      )
    )
  )
)

(defwidget current_window []
  (eventbox
    :onhover "${eww} update current_window_button=true"
    :onhoverlost "${eww} update current_window_button=false"
    :cursor "pointer"

    (box
      :orientation "horizontal"
      :space-evenly true
      :class "current_window"
      :hexpand true

      (button
        :class "button_current_window"
        :onclick "${script_runner} menus/toggle_menu.sh -m current_window_menu"

        "current.window"
      )
    )
  )
)

(defwidget workspaces []
  (eventbox
    :onhover "${eww} update workspaces_menu_button=true"
    :onhoverlost "${eww} update workspaces_menu_button=false"
    :cursor "pointer"
    :onscroll "${script_runner} change_active_workspace.sh {} ${current_workspace}"

    (box
      :orientation "horizontal"
      :space-evenly false
      :class "workspaces"
      :hexpand true

      (for workspace in workspaces
        (button
          :class "workspace ${current_workspace == workspace.id ? "current" : ""}"
          :onclick "hyprctl dispatch workspace ${workspace.id}"

          "${current_workspace == workspace.id ? "" : ""}"
        )
      )
    )
  )
)

(defwidget music []
  (eventbox
    :onhover "${eww} update music_button=true"
    :onhoverlost "${eww} update music_button=false"
    :cursor "pointer"

    (revealer
      :transition "slideup"
      :reveal {current_music_seek != 0 ? "true" : "false"}
      :duration "500ms"

      (box
        :class "music"
        :orientation "horizontal"
        :space-evenly true
        :halign "center"

        (box
          :class "song-cover-art"
          :vexpand "false"
          :hexpand "false"
          :style "background-image: url('${current_music_cover}');"
        )

        (box
          :class "parentbox"
          :orientation "vertical"

          (label
            :text {music != "" ? "${music}" : ""}
            :truncate "true"
            :limit-width "25"
          )
          (scale
            :class "musicbar"
            :value {current_music_seek != '' ? "${current_music_seek}" : "0"}
            :orientation "horizontal"
            :max 101
            :min 0
            :onchange "${script_runner} set_music_seek.sh {}"
          )
        )
        (revealer
          :transition "slideleft"
          :reveal music_button
          :duration "300ms"

          (box
            :class "music-control"
            :space-evenly "true"
            :spacing "16"

            (button
              :class "prev"
              :onclick "playerctl previous" ""
            )
            (button
              :class "pause"
              :onclick "playerctl play-pause" ""
            )
            (button
              :class "next"
              :onclick "playerctl next" ""
            )
          )
        )
      )
    )
  )
)

(defwidget brightness []
  (eventbox
    :onhover "${eww} update brightness_button=true"
    :onhoverlost "${eww} update brightness_button=false"
    :cursor "pointer"

    (box
      :orientation "horizontal"
      :space-evenly true

      (button
        :class "button_bar_icon button_brightness_menu"
        :onclick "${script_runner} menus/toggle_menu.sh -m brightness_menu"

        (label
          :xalign "0.5"
          :text "${current_brightness_icon}"
        )
      )
    )
  )
)

(defwidget bluetooth []
  (eventbox
    :onhover "${eww} update bluetooth_button=true"
    :onhoverlost "${eww} update bluetooth_button=false"
    :cursor "pointer"

    (box
      :orientation "horizontal"
      :space-evenly true

      (button
        :class "button_bar_icon button_bluetooth_menu"
        :onclick "${script_runner} menus/toggle_menu.sh -m bluetooth_menu"

        (label
          :xalign "0.5"
          :text "󰂯"
        )
      )
    )
  )
)

(defwidget microphone []
  (eventbox
    :onhover "${eww} update microphone_button=true"
    :onhoverlost "${eww} update microphone_button=false"
    :cursor "pointer"

    (box
      :orientation "horizontal"
      :space-evenly true

      (button
        :class "button_bar_icon button_microphone_menu"
        ; :onclick "${script_runner} menus/toggle_menu.sh -m microphone_menu"
        :onclick "wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle"

        (label
          :xalign "0.5"
          :text "${microphone_icon}"
        )
      )
    )
  )
)

(defwidget sound []
  (eventbox
    :onhover "${eww} update sound_button=true"
    :onhoverlost "${eww} update sound_button=false"
    :cursor "pointer"

    (box
      :orientation "horizontal"
      :space-evenly true

      (button
        :class "button_bar_icon button_sound_menu"
        :onclick "${script_runner} menus/toggle_menu.sh -m sound_menu"

        (label
          :xalign "0.5"
          :text "${volume_icon}"
        )
      )
    )
  )
)

(defwidget network []
  (eventbox
    :onhover "${eww} update network_button=true"
    :onhoverlost "${eww} update network_button=false"
    :cursor "pointer"

    (box
      :orientation "horizontal"
      :space-evenly true

      (button
        :class "button_bar_icon button_network_menu"
        :onclick "${script_runner} menus/toggle_menu.sh -m network_menu"

        (label
          :xalign "0.5"
          :text "${current_network_strength}"
        )
      )
    )
  )
)

(defwidget battery []
  (eventbox
    :onhover "${eww} update battery_button=true"
    :onhoverlost "${eww} update battery_button=false"
    :cursor "pointer"

    (box
      :orientation "horizontal"
      :space-evenly true

      (button
        :class {current_battery < 20 ? "button_bar_icon button_battery_menu battery_low" : "button_bar_icon button_battery_menu"}
        :onclick "${script_runner} menus/toggle_menu.sh -m battery_menu"

        (label
          :xalign "0.5"
          :text "${battery_icon}"
        )
      )
    )
  )
)

(defwidget clock []
  (eventbox
    :onhover "${eww} update calendar_button=true"
    :onhoverlost "${eww} update calendar_button=false"
    :cursor "pointer"

    (box
      :class "clock"
      :orientation "horizontal"
      :space-evenly false

      (button
        :class "calendar"
        :onclick "${script_runner} menus/toggle_menu.sh -m calendar"

        clock
      )
    )
  )
)

(defwidget notifications []
  (eventbox
    :onhover "${eww} update notifications_button=true"
    :onhoverlost "${eww} update notifications_button=false"
    :cursor "pointer"

    (box
      :orientation "horizontal"
      :space-evenly true

      (button
        :class "button_bar_icon button_notifications_menu"
        :onclick "${script_runner} menus/toggle_menu.sh -m notifications_menu"

        (label
          :xalign "0.5"
          :text "󰎟"
        )
      )
    )
  )
)

;; Calendar Widget ;;
(defwidget cal []
  (eventbox
    :onhover "${eww} update calendar=true"
    :onhoverlost "${eww} update calendar=false"
    :cursor "pointer"

	  (box
      :class "cal-box"
		  :orientation "v"

      (box
        :class "cal-inner-box"

        (calendar
          :class "cal"
          :day calendar_day
          :month calendar_month
          :year calendar_year
        )
      )
    )
  )
)

(defwidget battery_menu_widget []
  (box
    :class "menu_box"
    :orientation "v"
    :space-evenly false

    (box
      :class "menu_title menu_item"
      :orientation "h"
      :space-evenly true

      (label
        :class "menu_title_text"
        :xalign "0"
        :text "Battery"
      )
      (label
        :class "menu_title_subtext"
        :class {current_battery < 20 ? "menu_title_subtext menu_title_subtext_alert" : "menu_title_subtext"}
        :xalign "1"
        :text "${current_battery}%"
      )
    )
    (box
      :class "menu_section menu_item"
      :orientation "v"
      :space-evenly false

      (box
        :class "menu_section_text"

        (label
          :xalign "0"
          :text "Power state: ${battery_state}"
        )
      )
      (box
        :class "menu_section_text"

        (label
          :xalign "0"
          :text "Time left: ${time_left}"
        )
      )
    )
    ; (box
    ;   :class "menu_footer menu_item"
    ;   :orientation "v"
    ;   :space-evenly false

    ;   (eventbox
    ;     :cursor "pointer"

    ;     (button
    ;       :class ""
    ;       :onclick ""

    ;       (label
    ;         :xalign "0"
    ;         :text "Power settings"
    ;       )
    ;     )
    ;   )
    ; )
  )
)

(defwidget sound_menu_widget []
  (box
    :class "menu_box"
    :orientation "v"
    :space-evenly false

    (box
      :class "menu_title menu_item"
      :orientation "h"
      :space-evenly true

      (label
        :class "menu_title_text"
        :xalign "0"
        :text "Sound"
      )
      (label
        :class "menu_title_subtext"
        :xalign "1"
        :text "${current_volume}%"
      )
    )
    (box
      :class "menu_section menu_item"
      :orientation "v"
      :space-evenly false

      (eventbox
        :cursor "pointer"

        (scale
          :class "menu_slider volume_slider"
          :value current_volume
          :orientation "horizontal"
          :max 101
          :min 0
          :onchange

          "pactl set-sink-volume @DEFAULT_SINK@ {}%"
        )
      )
    )
    (box
      :class "menu_separator_no_border"
    )
    (box
      :class "menu_section menu_item"
      :orientation "v"
      :space-evenly false

      (eventbox
        :class "menu_section_text"
        :cursor "pointer"

        (button
          :class "menu_button"
          :onclick "wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle"

          (label
            :class "menu_button_label"
            :xalign "0"
            :text "Mute: ${volume_icon}  ${is_audio_muted}"
          )
        )
      )
    )
  )
)

(defwidget brightness_menu_widget []
  (box
    :class "menu_box"
    :orientation "v"
    :space-evenly false

    (box
      :class "menu_title menu_item"
      :orientation "h"
      :space-evenly true

      (label
        :class "menu_title_text"
        :xalign "0"
        :text "Brightness"
      )
      (label
        :class "menu_title_subtext"
        :xalign "1"
        :text "${current_brightness}%"
      )
    )
    (box
      :class "menu_section menu_item"
      :orientation "v"
      :space-evenly false

      (eventbox
        :cursor "pointer"

        (scale
          :class "menu_slider volume_slider"
          :value current_brightness
          :orientation "horizontal"
          :max 101
          :min 0
          :onchange

          "brightnessctl s {}%"
        )
      )
    )
  )
)

(defwidget system_menu_widget []
  (box
    :class "menu_box"
    :orientation "v"
    :space-evenly false

    (box
      :class "menu_section menu_item"
      :orientation "v"
      :space-evenly false

      (eventbox
        :class "menu_section_text"
        :cursor "pointer"

        (button
          :class "menu_button"
          :onclick "${script_runner} menus/toggle_about_this_system_menu.sh"

          (label
            :class "menu_button_label"
            :xalign "0"
            :text "About this system"
          )
        )
      )
    )
    (box
      :class "menu_section menu_item"
      :orientation "v"
      :space-evenly false

      (box
        :class "menu_separator"
      )

      (eventbox
        :class "menu_section_text"
        :cursor "pointer"

        (button
          :class "menu_button"
          :onclick "${script_runner} menus/power.sh -p suspend"

          (label
            :class "menu_button_label"
            :xalign "0"
            :text "Suspend"
          )
        )
      )
      (eventbox
        :class "menu_section_text"
        :cursor "pointer"

        (button
          :class "menu_button"
          :onclick "${script_runner} menus/power.sh -p reboot"

          (label
            :class "menu_button_label"
            :xalign "0"
            :text "Restart..."
          )
        )
      )
      (eventbox
        :class "menu_section_text"
        :cursor "pointer"

        (button
          :class "menu_button"
          :onclick "${script_runner} menus/power.sh -p shutdown"

          (label
            :class "menu_button_label"
            :xalign "0"
            :text "Shut Down..."
          )
        )
      )
    )
    (box
      :class "menu_section menu_item"
      :orientation "v"
      :space-evenly false

      (box
        :class "menu_separator"
      )

      (eventbox
        :class "menu_section_text"
        :cursor "pointer"

        (button
          :class "menu_button"
          :onclick "${script_runner} menus/power.sh -p lock"

          (label
            :class "menu_button_label"
            :xalign "0"
            :text "Lock Screen"
          )
        )
      )
      (eventbox
        :class "menu_section_text"
        :cursor "pointer"

        (button
          :class "menu_button"
          :onclick "${script_runner} menus/power.sh -p logout"

          (label
            :class "menu_button_label"
            :xalign "0"
            :text "Log Out of ${user_name}"
          )
        )
      )
    )
  )
)

(defwidget menu_header []
  (box
    :class "menu_header_box"
    :orientation "h"
    :space-evenly false
    :halign "end"

    (box)
    (box

      (eventbox
        :cursor "pointer"

        (button
          :class "button_bar_icon button_menu_header"
          :onclick "${script_runner} menus/close_all_menus.sh"

          ""
        )
      )
    )
  )
)

(defwidget about_this_system []
  (box
    :class "menu_box"
    :orientation "v"
    :space-evenly false

    (menu_header)

    (label
      :class "system_info"
      :text "${fastfetch_output}"
    )
  )
)

;;;;; Widgets END ;;;;;


;;;;;; Groups ;;;;;;

;; Left Group ;;
(defwidget left []
  (box
    :class "left"
    :orientation "horizontal"
    :space-evenly false
    :halign "start"
    :vexpand "false"
    :hexpand "false"

    (system_menu)
    (current_window)
    (workspaces)
  )
)

;; Center Group ;;
(defwidget center []
  (box
    :class "center"
    :orientation "horizontal"
    :space-evenly false
    :halign "center"
    :vexpand "false"
    :hexpand "false"

    (music)
  )
)

;; Right Group ;;
(defwidget right []
  (box
    :class "right"
    :orientation "horizontal"
    :space-evenly false
    :halign "end"
    :vexpand "false"
    :hexpand "false"

    (brightness)
    (bluetooth)
    (microphone)
    (sound)
    (network)
    (battery)
    (clock)
    (notifications)
  )
)

;; Bar ;;
(defwidget bar []
  (box
    :class "main-bar"
    :orientation "horizontal"
    :vexpand "false"
    :hexpand "false"

    (left)
    (center)
    (right)
  )
)
;;;;;; Groups END ;;;;;;


;;;;;; Windows ;;;;;;

;; bar ;;
(defwindow bar
  :monitor '[1, 0]'
  :geometry (
    geometry
      :x "0px"
      :y "0px"
      :width "100%"
      :height "0px"
      :anchor "top center")
  :stacking "bg"
  :exclusive "true"
  :focusable "false"
  :namespace "eww-bar"

  (bar)
)

(defwindow calendar
  :monitor '[1, 0]'
  :geometry (
    geometry
      :x "10px"
      :y "-20px"
      :width "270px"
      :height "60px"
      :anchor "top right")
  :stacking "overlay"
  :namespace "eww-overlay"

  (cal)
)

(defwindow battery_menu
  :monitor '[1, 0]'
  :geometry (
    geometry
      :x "210px"
      :y "-20px"
      :width "270px"
      :anchor "top right")
  :stacking "overlay"
  :namespace "eww-overlay"

  (battery_menu_widget)
)

(defwindow sound_menu
  :monitor '[1, 0]'
  :geometry (
    geometry
      :x "300px"
      :y "-20px"
      :width "300px"
      :anchor "top right")
  :stacking "overlay"
  :namespace "eww-overlay"

  (sound_menu_widget)
)

(defwindow brightness_menu
  :monitor '[1, 0]'
  :geometry (
    geometry
      :x "410px"
      :y "-20px"
      :width "300px"
      :anchor "top right")
  :stacking "overlay"
  :namespace "eww-overlay"

  (brightness_menu_widget)
)

(defwindow system_menu
  :monitor '[1, 0]'
  :geometry (
    geometry
      :x "0px"
      :y "-20px"
      :width "300px"
      :anchor "top left")
  :stacking "overlay"
  :namespace "eww-overlay"

  (system_menu_widget)
)

(defwindow about_this_system
  :monitor '[1, 0]'
  :geometry (
    geometry
      :x "0px"
      :y "0px"
      :width "500px"
      :height "500px"
      :anchor "center")
  :stacking "overlay"
  :namespace "eww-overlay"

  (about_this_system)
)

;;;;;; Windows END ;;;;;;


; https://github.com/elkowar/eww/issues/472#issuecomment-1146860335
; (defwidget closer [window]
;   (eventbox :onclick "${eww} close ${window} && ${eww} close ${window}-closer"))

; (defwindow calendar-closer
;   :monitor 0
;   :geometry (geometry :width "100%" :height "100%")
;   :stacking "fg"
;   :focusable false
;   (closer :window "calendar"))
